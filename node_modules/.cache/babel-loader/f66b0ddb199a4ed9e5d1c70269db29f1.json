{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, {\n  newItem,\n  itemIndex\n}) => {\n  if (itemIndex == -1) {\n    return [...cartItems, newItem];\n  }\n\n  ;\n  return [...cartItems.slice(0, itemIndex), newItem, ...cartItems.slice(itemIndex + 1)];\n};\n\nconst updateCartItem = ({\n  book,\n  item = {}\n}) => {\n  // const { book, item = {} } = data;\n  const {\n    id = book.id,\n    title = book.title,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    title,\n    count: count + 1,\n    total: total + book.price\n  };\n};\n\nconst fun = (bookId, state) => {\n  const book = state.books.find(book => book.id === bookId);\n  const itemIndex = state.cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = state.cartItems[itemIndex];\n  return {\n    book,\n    itemIndex,\n    item\n  };\n};\n\nconst fun_1 = (bookId, state, action = 'BOOK_ADDED_TO_CART') => {\n  const book = state.books.find(book => book.id === bookId);\n  const itemIndex = state.cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = state.cartItems == [] ? {} : state.cartItems[itemIndex];\n  console.log(book, itemIndex, item, state.cartItems); // const {\n  //     id = book.id,\n  //     title = book.title,\n  //     count = 0,\n  //     total = 0 } = item;\n  // if(action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\n  //     return {\n  //         newItem: {\n  //             id,\n  //             title,\n  //             count: count + 1,\n  //             total: total + book.price    \n  //         },\n  //         itemIndex\n  //     }\n  // }else if (action == 'DECREASE_BOOK_COUNT') {\n  //     return {\n  //         newItem: {\n  //             id: book.id,\n  //             title: book.title,\n  //             count: count - 1,\n  //             total: total - book.price\n  //         },\n  //         itemIndex\n  //     }\n  // };\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUREST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      // let { book, itemIndex, item} = fun(action.payload, state);\n      // console.log(book, itemIndex, item)\n      // let newItem = updateCartItem( fun(action.payload, state) );\n      fun_1(action.payload, state, 'BOOK_ADDED_TO_CART');\n    // return {\n    //     ...state,\n    //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'BOOK_ADDED_TO_CART') )\n    // }\n\n    case 'INCREASE_BOOK_COUNT': // return {\n    //     ...state,\n    //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'INCREASE_BOOK_COUNT') )\n    // }\n\n    case 'DECREASE_BOOK_COUNT': // return {\n    //     ...state,\n    //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'DECREASE_BOOK_COUNT') )\n    // }\n\n    case 'DELETE_BOOK':\n      const id = state.cartItems.findIndex(book => book.id === action.payload);\n      return { ...state,\n        cartItems: [...state.cartItems.slice(0, id), ...state.cartItems.slice(id + 1)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React-projects/re-store/src/reducers/reducers.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","newItem","itemIndex","slice","updateCartItem","book","item","id","title","count","total","price","fun","bookId","state","find","findIndex","fun_1","action","console","log","reducer","type","payload"],"mappings":"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","sourcesContent":["const initialState =  {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    orderTotal: 220\r\n}\r\n\r\nconst updateCartItems = (cartItems, { newItem, itemIndex }) => {\r\n    \r\n    if (itemIndex == -1) {\r\n        return [\r\n            ...cartItems,\r\n            newItem\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartItems.slice(0, itemIndex),\r\n        newItem,\r\n        ...cartItems.slice(itemIndex + 1 )\r\n    ];\r\n};\r\n\r\nconst updateCartItem = ({ book, item = {} }) => {\r\n\r\n    // const { book, item = {} } = data;\r\n    \r\n    const {\r\n        id = book.id,\r\n        title = book.title,\r\n        count = 0,\r\n        total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + 1,\r\n        total: total + book.price\r\n    }\r\n};\r\n\r\nconst fun = (bookId, state) => {\r\n    const book = state.books.find((book) => book.id === bookId);\r\n    const itemIndex = state.cartItems.findIndex(({id}) => id === bookId);\r\n    const item = state.cartItems[itemIndex];\r\n\r\n    return {\r\n        book,\r\n        itemIndex,\r\n        item\r\n    }\r\n}\r\n\r\nconst fun_1 = (bookId, state, action = 'BOOK_ADDED_TO_CART') => {\r\n\r\n    const book = state.books.find((book) => book.id === bookId);\r\n    const itemIndex = state.cartItems.findIndex(({id}) => id === bookId);\r\n    const item = state.cartItems == [] ? {} : state.cartItems[itemIndex];\r\n\r\n    console.log(book, itemIndex, item, state.cartItems);\r\n\r\n    // const {\r\n    //     id = book.id,\r\n    //     title = book.title,\r\n    //     count = 0,\r\n    //     total = 0 } = item;\r\n\r\n    // if(action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\r\n    //     return {\r\n    //         newItem: {\r\n    //             id,\r\n    //             title,\r\n    //             count: count + 1,\r\n    //             total: total + book.price    \r\n    //         },\r\n    //         itemIndex\r\n    //     }\r\n    // }else if (action == 'DECREASE_BOOK_COUNT') {\r\n    //     return {\r\n    //         newItem: {\r\n    //             id: book.id,\r\n    //             title: book.title,\r\n    //             count: count - 1,\r\n    //             total: total - book.price\r\n    //         },\r\n    //         itemIndex\r\n    //     }\r\n    // };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    console.log(action.type);\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_BOOKS_REQUREST' :\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS' : \r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE' : \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'BOOK_ADDED_TO_CART' :\r\n\r\n            // let { book, itemIndex, item} = fun(action.payload, state);\r\n\r\n            // console.log(book, itemIndex, item)\r\n\r\n            // let newItem = updateCartItem( fun(action.payload, state) );\r\n\r\n            fun_1(action.payload, state, 'BOOK_ADDED_TO_CART');\r\n\r\n            // return {\r\n            //     ...state,\r\n            //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'BOOK_ADDED_TO_CART') )\r\n            // }\r\n        case 'INCREASE_BOOK_COUNT' :\r\n\r\n            // return {\r\n            //     ...state,\r\n            //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'INCREASE_BOOK_COUNT') )\r\n            // }\r\n        case 'DECREASE_BOOK_COUNT' :\r\n\r\n            // return {\r\n            //     ...state,\r\n            //     cartItems: updateCartItems( state.cartItems, fun_1(action.payload, state, 'DECREASE_BOOK_COUNT') )\r\n            // }\r\n        case 'DELETE_BOOK' :\r\n\r\n            const id  = state.cartItems.findIndex((book) => book.id === action.payload );\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: [\r\n                    ...state.cartItems.slice(0, id),\r\n                    ...state.cartItems.slice(id + 1)\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}