{"ast":null,"code":"const updateCartItems = (cartItems, {\n  newItem,\n  itemIndex\n}) => {\n  if (newItem.count == 0) {\n    return [...cartItems.slice(0, itemIndex), ...cartItems.slice(itemIndex + 1)];\n  }\n\n  if (itemIndex == -1) {\n    return [...cartItems, newItem];\n  }\n\n  ;\n  return [...cartItems.slice(0, itemIndex), newItem, ...cartItems.slice(itemIndex + 1)];\n};\n\nconst updateCartItem = (bookId, state, action) => {\n  const {\n    bookList: {\n      books\n    },\n    shoppingCart: {\n      cartItems\n    }\n  } = state;\n  const book = books.find(book => book.id === bookId);\n  const itemIndex = cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const itemDefault = (book, item = {}) => {\n    const {\n      id = book.id,\n      title = book.title,\n      count = 0,\n      total = 0\n    } = item;\n    return {\n      id,\n      title,\n      count,\n      total\n    };\n  };\n\n  const {\n    id,\n    title,\n    count,\n    total\n  } = itemDefault(book, item);\n\n  if (action == 'DECREASE_BOOK_COUNT') {\n    return {\n      newItem: {\n        id: book.id,\n        title: book.title,\n        count: count - 1,\n        total: total - book.price\n      },\n      itemIndex\n    };\n  } else if (action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\n    return {\n      newItem: {\n        id,\n        title,\n        count: count + 1,\n        total: total + book.price\n      },\n      itemIndex\n    };\n  }\n\n  ;\n};\n\nconst updataShoppingCart = (state, action) => {\n  if (state == undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0\n    };\n  }\n\n  const {\n    cartItems,\n    orderTotal\n  } = state.shoppingCart;\n\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return {\n        orderTotal,\n        cartItems: updateCartItems(cartItems, updateCartItem(action.payload, state, action.type))\n      };\n\n    case 'INCREASE_BOOK_COUNT':\n      return {\n        orderTotal,\n        cartItems: updateCartItems(cartItems, updateCartItem(action.payload, state, action.type))\n      };\n\n    case 'DECREASE_BOOK_COUNT':\n      return {\n        orderTotal,\n        cartItems: updateCartItems(cartItems, updateCartItem(action.payload, state, action.type))\n      };\n\n    case 'DELETE_BOOK':\n      const id = cartItems.findIndex(({\n        id\n      }) => id === action.payload);\n      return {\n        orderTotal,\n        cartItems: [...cartItems.slice(0, id), ...cartItems.slice(id + 1)]\n      };\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updataShoppingCart;","map":{"version":3,"sources":["D:/React-projects/re-store/src/reducers/updata-shopping-cart.js"],"names":["updateCartItems","cartItems","newItem","itemIndex","count","slice","updateCartItem","bookId","state","action","bookList","books","shoppingCart","book","find","id","findIndex","item","itemDefault","title","total","price","updataShoppingCart","undefined","orderTotal","type","payload"],"mappings":"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","sourcesContent":["const updateCartItems = (cartItems, { newItem, itemIndex }) => {\r\n\r\n    if(newItem.count == 0) {\r\n        return [\r\n            ...cartItems.slice(0, itemIndex),\r\n            ...cartItems.slice(itemIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (itemIndex == -1) {\r\n        return [\r\n            ...cartItems,\r\n            newItem\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartItems.slice(0, itemIndex),\r\n        newItem,\r\n        ...cartItems.slice(itemIndex + 1 )\r\n    ];\r\n};\r\n\r\nconst updateCartItem = (bookId, state, action) => {\r\n\r\n    const { bookList: { books }, shoppingCart: { cartItems, } } = state;\r\n\r\n    const book = books.find((book) => book.id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const itemDefault = (book, item = {}) => {\r\n        const {\r\n            id = book.id,\r\n            title = book.title,\r\n            count = 0,\r\n            total = 0 } = item;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            count,\r\n            total\r\n        };\r\n    }\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        count,\r\n        total} = itemDefault(book, item);\r\n\r\n    if(action == 'DECREASE_BOOK_COUNT') {\r\n        return {\r\n            newItem: {\r\n                id: book.id,\r\n                title: book.title,\r\n                count: count - 1,\r\n                total: total - book.price\r\n            },\r\n            itemIndex\r\n        }\r\n        \r\n    }else if(action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\r\n        return {\r\n            newItem: {\r\n                id,\r\n                title,\r\n                count: count + 1,\r\n                total: total + book.price    \r\n            },\r\n            itemIndex\r\n        }\r\n    };\r\n};\r\n\r\n\r\nconst updataShoppingCart = (state, action) => {\r\n\r\n    if(state == undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0 \r\n        }\r\n    }\r\n\r\n    const {cartItems, orderTotal} = state.shoppingCart;\r\n\r\n    switch(action.type) {\r\n        case 'BOOK_ADDED_TO_CART' :\r\n\r\n            return {\r\n                orderTotal,\r\n                cartItems: updateCartItems( cartItems, updateCartItem(action.payload, state, action.type) )\r\n            }\r\n        case 'INCREASE_BOOK_COUNT' :\r\n\r\n            return {\r\n                orderTotal,\r\n                cartItems: updateCartItems( cartItems, updateCartItem(action.payload, state, action.type) )\r\n            }\r\n        case 'DECREASE_BOOK_COUNT' :\r\n\r\n            return {\r\n                orderTotal,\r\n                cartItems: updateCartItems( cartItems, updateCartItem(action.payload, state, action.type) )\r\n            }\r\n        case 'DELETE_BOOK' :\r\n\r\n            const id  = cartItems.findIndex(({ id }) => id === action.payload );\r\n\r\n            return {\r\n                orderTotal,\r\n                cartItems: [\r\n                    ...cartItems.slice(0, id),\r\n                    ...cartItems.slice(id + 1)\r\n                ]\r\n            };\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nexport default updataShoppingCart;"]},"metadata":{},"sourceType":"module"}