{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx == -1) {\n    return [...cartItems, item];\n  }\n\n  ;\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    title = book.title,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    title,\n    count: count + 1,\n    total: total + book.price\n  };\n};\n\nconst fun = (bookId, state) => {\n  const book = state.books.find(book => book.id === bookId);\n  const itemIndex = state.cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = state.cartItems[itemIndex];\n  return {\n    book,\n    itemIndex,\n    item\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n  const {\n    book,\n    itemIndex,\n    item\n  } = fun(action.payload, state);\n  console.log(count, total);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUREST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const newItem = updateCartItem(book, item);\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\n      };\n\n    case 'INCREASE_BOOK_COUNT':\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\n      };\n\n    case 'DECREASE_BOOK_COUNT':\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\n      };\n\n    case 'DELETE_BOOK':\n      console.log('DELETE_BOOK');\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React-projects/re-store/src/reducers/reducers.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","slice","updateCartItem","book","id","title","count","total","price","fun","bookId","state","find","itemIndex","findIndex","reducer","action","console","log","type","payload","newItem"],"mappings":"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","sourcesContent":["const initialState =  {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    orderTotal: 220\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n    \r\n    if (idx == -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1 )\r\n    ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}) => {\r\n    \r\n    const {\r\n        id = book.id,\r\n        title = book.title,\r\n        count = 0,\r\n        total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + 1,\r\n        total: total + book.price\r\n    }\r\n};\r\n\r\nconst fun = (bookId, state) => {\r\n    const book = state.books.find((book) => book.id === bookId);\r\n    const itemIndex = state.cartItems.findIndex(({id}) => id === bookId);\r\n    const item = state.cartItems[itemIndex];\r\n\r\n    return {\r\n        book,\r\n        itemIndex,\r\n        item\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    console.log(action.type);\r\n\r\n    const { book, itemIndex, item} = fun(action.payload, state);\r\n\r\n    console.log(count, total);\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_BOOKS_REQUREST' :\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS' : \r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE' : \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'BOOK_ADDED_TO_CART' :\r\n\r\n            const newItem = updateCartItem(book, item);\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\r\n            }\r\n        case 'INCREASE_BOOK_COUNT' : \r\n        \r\n            return {\r\n                ...state,\r\n                cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\r\n            }\r\n\r\n        case 'DECREASE_BOOK_COUNT' :\r\n\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\r\n            }\r\n\r\n        case 'DELETE_BOOK' :\r\n\r\n            console.log('DELETE_BOOK');\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}