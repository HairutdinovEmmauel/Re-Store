{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-projects\\\\re-store\\\\src\\\\component\\\\book-list\\\\book-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './book-list.css';\nimport { booksLoaded, booksRequresd, booksError, onAddToCart } from '../../actions';\nimport BookListItem from '../book-list-item/book-list-item';\nimport { compose } from '../../utils';\nimport { withBoostoreService } from '../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nconst BookList = ({\n  books,\n  onAddToCart\n}) => {\n  return React.createElement(\"ul\", {\n    className: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, books.map(book => {\n    return React.createElement(\"li\", {\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(BookListItem, {\n      book: book,\n      onAddToCart: onAddToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }));\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error,\n      onAddToCart\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n\n    console.log(error);\n    return React.createElement(BookList, {\n      books: books,\n      onAddToCart: onAddToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => {\n  return {\n    books,\n    loading,\n    error\n  };\n};\n\nconst mapDispatctToProps = (dispatch, ownProps) => {\n  return {\n    fetchBooks: () => {\n      const {\n        bookstoreService\n      } = ownProps;\n      dispatch(booksRequresd());\n      bookstoreService.getBooks().then(data => {\n        dispatch(booksLoaded(data));\n      }).catch(err => dispatch(booksError(err)));\n    },\n    onAddToCart: id => dispatch(onAddToCart(id))\n  };\n};\n\nexport default compose(withBoostoreService(), connect(mapStateToProps, mapDispatctToProps))(BookListContainer);","map":{"version":3,"sources":["D:/React-projects/re-store/src/component/book-list/book-list.js"],"names":["React","Component","connect","booksLoaded","booksRequresd","booksError","onAddToCart","BookListItem","compose","withBoostoreService","Spinner","ErrorIndicator","BookList","books","map","book","id","BookListContainer","componentDidMount","props","fetchBooks","render","loading","error","console","log","mapStateToProps","mapDispatctToProps","dispatch","ownProps","bookstoreService","getBooks","then","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;AAEA,SACIC,WADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,WAJJ,QAKO,eALP;AAOA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,QAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAA4B;AACzC,SACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQO,KAAK,CAACC,GAAN,CACKC,IAAD,IAAU;AACN,WAAO;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AAA0B,MAAA,WAAW,EAAET,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CAAP;AACH,GAHL,CAFR,CADJ;AAYH,CAbD;;AAeA,MAAMW,iBAAN,SAAgChB,SAAhC,CAA0C;AAEtCiB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,UAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA,KAAF;AAASS,MAAAA,OAAT;AAAkBC,MAAAA,KAAlB;AAAyBjB,MAAAA;AAAzB,QAAwC,KAAKa,KAAnD;;AAEA,QAAGG,OAAH,EAAY;AACR,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAGC,KAAH,EAAU;AACN,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,WAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAwB,MAAA,WAAW,EAAEP,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAnBqC;;AAsB1C,MAAMoB,eAAe,GAAG,CAAC;AAAEb,EAAAA,KAAF;AAASS,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AACnD,SAAO;AAAEV,IAAAA,KAAF;AAASS,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AACH,CAFD;;AAIA,MAAMI,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO;AACHT,IAAAA,UAAU,EAAE,MAAM;AAEd,YAAM;AAAEU,QAAAA;AAAF,UAAuBD,QAA7B;AAEAD,MAAAA,QAAQ,CAACxB,aAAa,EAAd,CAAR;AAEA0B,MAAAA,gBAAgB,CAACC,QAAjB,GACKC,IADL,CACWC,IAAD,IAAU;AACZL,QAAAA,QAAQ,CAACzB,WAAW,CAAC8B,IAAD,CAAZ,CAAR;AACH,OAHL,EAIKC,KAJL,CAIYC,GAAD,IAASP,QAAQ,CAACvB,UAAU,CAAC8B,GAAD,CAAX,CAJ5B;AAMH,KAbE;AAcH7B,IAAAA,WAAW,EAAGU,EAAD,IAAQY,QAAQ,CAACtB,WAAW,CAACU,EAAD,CAAZ;AAd1B,GAAP;AAiBH,CAlBD;;AAoBA,eAAeR,OAAO,CAClBC,mBAAmB,EADD,EAElBP,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAFW,CAAP,CAGTV,iBAHS,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './book-list.css';\r\n\r\nimport {\r\n    booksLoaded,\r\n    booksRequresd,\r\n    booksError,\r\n    onAddToCart\r\n} from '../../actions'\r\n\r\nimport BookListItem from '../book-list-item/book-list-item';\r\nimport { compose } from '../../utils'\r\nimport { withBoostoreService } from '../hoc';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst BookList = ({ books, onAddToCart }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {      \r\n                books.map(\r\n                    (book) => {\r\n                        return <li key={book.id}><BookListItem book={book} onAddToCart={onAddToCart}/></li> \r\n                    }\r\n                )\r\n            }\r\n        </ul>\r\n        \r\n    );\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddToCart} = this.props;\r\n\r\n        if(loading) {\r\n            return <Spinner />;\r\n        }\r\n        if(error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        console.log(error);\r\n\r\n        return <BookList books={books} onAddToCart={onAddToCart} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ books, loading, error }) => {\r\n    return { books, loading, error } \r\n}\r\n\r\nconst mapDispatctToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchBooks: () => {\r\n\r\n            const { bookstoreService } = ownProps;\r\n            \r\n            dispatch(booksRequresd());\r\n\r\n            bookstoreService.getBooks()\r\n                .then((data) => {\r\n                    dispatch(booksLoaded(data));\r\n                })\r\n                .catch((err) => dispatch(booksError(err)));\r\n\r\n        },\r\n        onAddToCart: (id) => dispatch(onAddToCart(id))\r\n    }\r\n    \r\n}\r\n\r\nexport default compose(\r\n    withBoostoreService(),\r\n    connect(mapStateToProps, mapDispatctToProps)\r\n    )(BookListContainer);"]},"metadata":{},"sourceType":"module"}